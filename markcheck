#!/bin/bash
#	markcheck  3.40.181  2018-08-04_22:28:20_CDT  https://github.com/BradleyA/markit  uadmin  three-rpi3b.cptx86.com 3.39  
#	   ruffed out display_help section #29 
###
#	set -x
#	set -v
###
display_help() {
echo -e "\n${0} - check file release with repository release"
echo -e "\nUSAGE\n   ${0} [<FILE_NAME>]"
echo    "   ${0} [--file <PATH>/<FILE_NAME> | -f <PATH>/<FILE_NAME>]"
echo    "   ${0} [--help | -help | help | -h | h | -? | ?] [--version | -v]"
echo -e "\nDESCRIPTION\nCheck the release of a file that was marked using markit with the GitHub"
echo    "repository release.  Markcheck may require --file option to include the"
echo    "relative or absolute path with the file name.  Markcheck only works on files"
echo    "that were marked with markit release 3.10.142 or later releases."
echo -e "\nOPTIONS\n   -f, --file\n      path and file on system '<path>/<file_name>'"
echo -e "\nDOCUMENTATION\n   https://github.com/BradleyA/markit"
echo -e "\nEXAMPLES\n   markcheck -f testfiles/sample.c\n\n   Check file named sample.c release number in relative path testfile/ with\n   repository release number."
echo -e "\n   markcheck markit\n\n   Check file named markit release number with repository release number.\n"
}
if [ "$1" == "--help" ] || [ "$1" == "-help" ] || [ "$1" == "help" ] || [ "$1" == "-h" ] || [ "$1" == "h" ] || [ "$1" == "-?" ] || [ "$1" == "?" ] ; then
	display_help
	exit 0
fi
if [ "$1" == "--version" ] || [ "$1" == "-version" ] || [ "$1" == "version" ] ||  [ "$1" == "-v" ] ; then
	head -2 ${0} | awk {'print$2"\t"$3'}
	exit 0
fi
###
BOLD=$(tput bold)
NORMAL=$(tput sgr0)
#	Check if in Git repository
source /usr/share/bash-completion/completions/git
if ! $( __gitdir > /dev/null 2>&1 ) ; then
	echo -e "${NORMAL}${0} ${LINENO} [${BOLD}WARNING${NORMAL}]:	`pwd` Check if you are in a Git repository\n\tand you have GIT permission.\n"	1>&2
	exit 0
fi
#	Check if remote git repository has been setup #28
git rev-list HEAD 1> /dev/null || { echo -e "\n${NORMAL}${0} ${LINENO} [${BOLD}ERROR${NORMAL}]:	Remote repository has\n\tnot been setup or git cloned <remote-repository> was not used to pull\n\tremote repository before using markit." ; exit 1; }
#       Check if argument 1 is blank
if [ "${1}" == "" ] ; then
	display_help
	echo -e "${NORMAL}\n${0} ${LINENO} [${BOLD}ERROR${NORMAL}]:  File not found on command line\n" 1>&2
	exit 0
fi
#	Check if argument 1 is -f or --file the path is reqired to be included 
if [ "${1}" == "--file" ] || [ "${1}" == "-f" ] ; then
	#       Check if argument 2 is blank
	if [ "${2}" == "" ] ; then
		display_help
		echo -e "${NORMAL}\n${0} ${LINENO} [${BOLD}ERROR${NORMAL}]:  File name not found; --file <path>/<file_name> or -f <path>/<file_name> option\n" 1>&2
		exit 0
	fi
	MARKIT_FILE=${2}
else
	#	Locate file in the PATH
	TEMP=`whereis "${1}"`
	MARKIT_FILE=$(echo ${TEMP} | awk {'print $2'} )
	#       Check if TEMP is blank
	if [ "${MARKIT_FILE}" == "" ] ; then
		display_help
		echo -e "${NORMAL}\n${0} ${LINENO} [${BOLD}ERROR${NORMAL}]:  ${1} not found; consider using --file <path>/<file_name> or -f <path>/<file_name> option\n" 1>&2
		exit 0
	fi
fi
FILE_NAME=`echo ${MARKIT_FILE} | sed 's/.*\///'`
###############################
echo  "${LINENO} MARKIT_FILE = ${MARKIT_FILE}    FILE_NAME = ${FILE_NAME}"
echo  "${LINENO} Does it include the path for MARKIT_FILE = ${MARKIT_FILE}"
###############################
#       Check if file exists and has a size greater than zero || if file exists and is readable
if [ ! -s ${MARKIT_FILE} ] || [ ! -r ${MARKIT_FILE} ] ; then
       	echo -e "${NORMAL}\n${0} ${LINENO} [${BOLD}ERROR${NORMAL}]:  ${MARKIT_FILE} file is not found or is empty or is not readable\n" 1>&2
	exit 1
fi
###############################
echo  "${LINENO} MARKIT_FILE is found and is not empty and is it readable ? = ${MARKIT_FILE}"
echo  "${LINENO} REPOSITORY_NAME >>${REPOSITORY_NAME}<<"
###############################
#	REPOSITORY_NAME=`head -2 ${MARKIT_FILE} | awk {'print$5'}`
#	MARKIT_FILE_RELEASE=`head -2 ${MARKIT_FILE} | awk {'print$3'}`
REPOSITORY_NAME=`grep -m 1 -e ${FILE_NAME} -e git ${MARKIT_FILE} | awk {'print$5'}`
MARKIT_FILE_RELEASE=`grep -m 1 -e ${FILE_NAME} -e git ${MARKIT_FILE} | awk {'print$3'}`
###
echo  "${LINENO} MARKIT_FILE_RELEASE >>${MARKIT_FILE_RELEASE}<<"
echo  "${LINENO} REPOSITORY_NAME >>${REPOSITORY_NAME}<<"
REPOSITORY_NAME=`echo ${REPOSITORY_NAME} | sed 's/github.com/api.github.com\/repos/'`
echo  ">>${LINENO} REPOSITORY_NAME >>${REPOSITORY_NAME}<<"
REPOSITORY_NAME="curl \-L ${REPOSITORY_NAME}/tarball | tar --directory /tmp/markit-temp -xzf - "
echo  "${LINENO} REPOSITORY_NAME >>${REPOSITORY_NAME}"
###
mkdir /tmp/markit-temp
eval ${REPOSITORY_NAME}
###
#	need to strip the file name out of ${MARKIT_FILE} to be used with the find below
###
FILE_NAME_LOCATION=`find /tmp/markit-temp -type f -name ${FILE_NAME} -print`
echo ${FILE_NAME_LOCATION}
MARKIT_FILE_CURRENT_RELEASE=`grep -m 1 -e ${FILE_NAME} -e git ${FILE_NAME_LOCATION} | awk {'print$3'}`
#	MARKIT_FILE_CURRENT_RELEASE=`head -2 ${FILE_NAME_LOCATION} | awk {'print$3'}`
echo  "${LINENO} MARKIT_FILE_CURRENT_RELEASE >>${MARKIT_FILE_CURRENT_RELEASE}<<"
###
rm -rf /tmp/markit-temp
###
